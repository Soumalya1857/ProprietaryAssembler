Operation,Opcode,Operands,Length
ADD,$00,R/M8; REG8,0
ADD,$01,R/M16; REG16,0
ADD,$02,REG; R/M8,0
ADD,$03,REG16; R/M16,0
ADD,$04,AL; IMM8,0
ADD,$05,AX; IMM16,0
PUSH,$06,ES,0
POP,$07,ES,0
OR,$08,R/M8; REG8,0
OR,$09,R/M16; REG16,0
OR,$0A,REG8; R/M8,0
OR,$0B,REG16; R/M16,0
OR,$0C,AL; IMM8,0
OR,$0D,AX; IMM16,0
PUSH,$0E,CS,0
ADC,$10,R/M8; REG8,0
ADC,$11,R/M16; REG16,0
ADC,$12,REG8; R/M8,0
ADC,$13,REG16; R/M16,0
ADC,$14,AL; IMM8,0
ADC,$15,AX; IMM16,0
PUSH,$16,SS,0
POP,$17,SS,0
SBB,$18,R/M8; REG8,0
SBB,$19,R/M16; REG16,0
SBB,$1A,REG8; R/M8,0
SBB,$1B,REG16; R/M16,0
SBB,$1C,AL; IMM8,0
SBB,$1D,AX; IMM16,0
PUSH,$1E,DS,0
POP,$1F,DS,0
AND,$20,R/M8; REG8,0
AND,$21,R/M16; REG16,0
AND,$22,REG8; R/M8,0
AND,$23,REG16; R/M16,0
AND,$24,AL; IMM8,0
AND,$25,AX; IMM16,0
SUB,$28,R/M8; REG8,0
SUB,$29,R/M16; REG16,0
SUB,$2A,REG8; R/M8,0
SUB,$2B,REG16; R/M16,0
SUB,$2C,AL; IMM8,0
SUB,$2D,AX; IMM16,0
XOR,$30,R/M8; REG8,0
XOR,$31,R/M16; REG16,0
XOR,$32,REG8; R/M8,0
XOR,$33,REG16; R/M16,0
XOR,$34,AL; IMM8,0
XOR,$35,AX; IMM16,0
CMP,$38,R/M8; REG8,0
CMP,$39,R/M16; REG16,0
CMP,$3A,REG8; R/M8,0
CMP,$3B,REG16; R/M16,0
CMP,$3C,AL; IMM8,0
CMP,$3D,AX; IMM16,0
INC,$40,REG16(AX),0
INC,$41,REG16(CX),0
INC,$42,REG16(DX),0
INC,$43,REG16(BX),0
INC,$44,REG16(SP),0
INC,$45,REG16(BP),0
INC,$46,REG16(SI),0
INC,$47,REG16(DI),0
DEC,$48,REG16(AX),0
DEC,$49,REG16(CX),0
DEC,$50,REG16(DX),0
DEC,$51,REG16(BX),0
DEC,$52,REG16(SP),0
DEC,$53,REG16(BP),0
DEC,$54,REG16(SI),0
DEC,$55,REG16(DI),0
PUSH,$50,REG16(AX),0
PUSH,$51,REG16(CX),0
PUSH,$52,REG16(DX),0
PUSH,$53,REG16(BX),0
PUSH,$54,REG16(SP),0
PUSH,$55,REG16(BP),0
PUSH,$56,REG16(SI),0
PUSH,$57,REG16(DI),0
POP,$58,REG16(AX),0
POP,$59,REG16(CX),0
POP,$5A,REG16(DX),0
POP,$5B,REG16(BX),0
POP,$5C,REG16(SP),0
POP,$5D,REG16(BP),0
POP,$5E,REG16(SI),0
POP,$5F,REG16(DI),0
JB,$72,8BIT RELATIVE,0
JNB,$73,8BIT RELATIVE,0
JZ,$74,8BIT RELATIVE,0
JNZ,$75,8BIT RELATIVE,0
JBE,$76,8BIT RELATIVE,0
JA,$77,8BIT RELATIVE,0
JL,$7C,8BIT RELATIVE,0
JGE,$7D,8BIT RELATIVE,0
JG,$7F,8BIT RELATIVE,0
MOV,$88,R/M8; REG8,0
MOV,$89,R/M16; REG16,0
POP,$8F,EV,0
CALL,$9A,32BIT DISPLACEMENT,0
MOV,$A0,AL; MEM8,0
MOV,$A1,AX; MEM16,0
MOV,$A2,MEM8; AL,0
MOV,$A3,MEM16; AX,0
MOV,$B0,REG8(AL); IMM8,0
MOV,$B1,REG8(CL); IMM8,0
MOV,$B2,REG8(DL); IMM8,0
MOV,$B3,REG8(BL); IMM8,0
MOV,$B4,REG8(AH); IMM8,0
MOV,$B5,REG8(CH); IMM8,0
MOV,$B6,REG8(DH); IMM8,0
MOV,$B7,REG8(BH); IMM8,0
MOV,$B8,REG16(AX); IMM16,0
MOV,$B9,REG16(CX); IMM16,0
MOV,$BA,REG16(DX); IMM16,0
MOV,$BB,REG16(BX); IMM16,0
MOV,$BC,REG16(SP); IMM16,0
MOV,$BD,REG16(BP); IMM16,0
MOV,$BE,REG16(SI); IMM16,0
MOV,$BF,REG16(DI); IMM16,0
RET,$C2,16BIT POP,0
MOV,$C6,R/M8; IMM8,0
MOV,$C7,R/M16; IMM16,0
RET,$CA,32BIT POP,0
IRET,$CF,48BIT POP,0
LOOP,$E2,8BIT RELATIVE,0
IN,$E4,AL; ADDR8,0
IN,$E5,AX; ADDR8,0
OUT,$E6,ADDR8; AL,0
OUT,$E7,ADDR8; AX,0
JMP,$EA,32BIT DISPLACEMENT,0
IN ,$EC,AL; PORT[DX],0
IN,$ED,AX; PORT[DX],0
OUT,$EE,PORT[DX]; AL,0
OUT,$EF,PORT[DX]; AX,0
CLD,$FC,,
STD,$FD,,
